// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#ifndef CXX_________DATA_SCHEMAS_MIX_PIMPL_HXX
#define CXX_________DATA_SCHEMAS_MIX_PIMPL_HXX

#include "mix-pskel.hxx"

namespace mix
{
  class mixType_pimpl: public virtual mixType_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    BasicImageParameters ();

    virtual void
    ImageCreation ();

    virtual void
    ImagingPerformanceAssessment ();

    virtual void
    ChangeHistory ();

    virtual void
    post_mixType ();
  };

  class BasicImageParametersType_pimpl: public virtual BasicImageParametersType_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    Format ();

    virtual void
    File ();

    virtual void
    PreferredPresentation ();

    virtual void
    post_BasicImageParametersType ();
  };

  class ImageCreationType_pimpl: public virtual ImageCreationType_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    SourceType ();

    virtual void
    SourceID ();

    virtual void
    ImageProducer ();

    virtual void
    Host ();

    virtual void
    DeviceSource ();

    virtual void
    ScanningSystemCapture ();

    virtual void
    DigitalCameraCapture ();

    virtual void
    CameraCaptureSettings ();

    virtual void
    Sensor ();

    virtual void
    DateTimeCreated ();

    virtual void
    Methodology ();

    virtual void
    post_ImageCreationType ();
  };

  class ImagingPerformanceAssessmentType_pimpl: public virtual ImagingPerformanceAssessmentType_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    SpatialMetrics ();

    virtual void
    Energetics ();

    virtual void
    TargetData ();

    virtual void
    post_ImagingPerformanceAssessmentType ();
  };

  class ChangeHistoryType_pimpl: public virtual ChangeHistoryType_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ImageProcessing ();

    virtual void
    PreviousImageMetadata ();

    virtual void
    post_ChangeHistoryType ();
  };

  class FormatType_pimpl: public virtual FormatType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_FormatType ();
  };

  class typeOfFormatType_pimpl: public virtual typeOfFormatType_pskel,
    public ::mix::FormatType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfFormatType ();
  };

  class ByteOrderType_pimpl: public virtual ByteOrderType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ByteOrderType ();
  };

  class typeOfByteOrderType_pimpl: public virtual typeOfByteOrderType_pskel,
    public ::mix::ByteOrderType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfByteOrderType ();
  };

  class CompressionSchemeType_pimpl: public virtual CompressionSchemeType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_CompressionSchemeType ();
  };

  class typeOfCompressionSchemeType_pimpl: public virtual typeOfCompressionSchemeType_pskel,
    public ::mix::CompressionSchemeType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfCompressionSchemeType ();
  };

  class CompressionLevelType_pimpl: public virtual CompressionLevelType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_CompressionLevelType ();
  };

  class typeOfCompressionLevelType_pimpl: public virtual typeOfCompressionLevelType_pskel,
    public ::mix::CompressionLevelType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfCompressionLevelType ();
  };

  class ColorSpaceType_pimpl: public virtual ColorSpaceType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ColorSpaceType ();
  };

  class typeOfColorSpaceType_pimpl: public virtual typeOfColorSpaceType_pskel,
    public ::mix::ColorSpaceType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfColorSpaceType ();
  };

  class typeOfProfileNameType_pimpl: public virtual typeOfProfileNameType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfProfileNameType ();
  };

  class typeOfProfileURLType_pimpl: public virtual typeOfProfileURLType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfProfileURLType ();
  };

  class YCbCrSubSamplingType_pimpl: public virtual YCbCrSubSamplingType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_YCbCrSubSamplingType ();
  };

  class typeOfYCbCrSubSamplingType_pimpl: public virtual typeOfYCbCrSubSamplingType_pskel,
    public ::mix::YCbCrSubSamplingType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfYCbCrSubSamplingType ();
  };

  class YCbCrPositioningType_pimpl: public virtual YCbCrPositioningType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_YCbCrPositioningType ();
  };

  class typeOfYCbCrPositioningType_pimpl: public virtual typeOfYCbCrPositioningType_pskel,
    public ::mix::YCbCrPositioningType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfYCbCrPositioningType ();
  };

  class YcbCrCoefficientsType_pimpl: public virtual YcbCrCoefficientsType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_YcbCrCoefficientsType ();
  };

  class typeOfYcbCrCoefficientsType_pimpl: public virtual typeOfYcbCrCoefficientsType_pskel,
    public ::mix::YcbCrCoefficientsType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfYcbCrCoefficientsType ();
  };

  class ReferenceBlackWhiteType_pimpl: public virtual ReferenceBlackWhiteType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ReferenceBlackWhiteType ();
  };

  class typeOfReferenceBlackWhiteType_pimpl: public virtual typeOfReferenceBlackWhiteType_pskel,
    public ::mix::ReferenceBlackWhiteType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfReferenceBlackWhiteType ();
  };

  class SegmentTypeType_pimpl: public virtual SegmentTypeType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SegmentTypeType ();
  };

  class typeOfSegmentTypeType_pimpl: public virtual typeOfSegmentTypeType_pskel,
    public ::mix::SegmentTypeType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfSegmentTypeType ();
  };

  class StripOffsetsType_pimpl: public virtual StripOffsetsType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_StripOffsetsType ();
  };

  class typeOfStripOffsetsType_pimpl: public virtual typeOfStripOffsetsType_pskel,
    public ::mix::StripOffsetsType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfStripOffsetsType ();
  };

  class RowsPerStripType_pimpl: public virtual RowsPerStripType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_RowsPerStripType ();
  };

  class typeOfRowsPerStripType_pimpl: public virtual typeOfRowsPerStripType_pskel,
    public ::mix::RowsPerStripType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfRowsPerStripType ();
  };

  class StripByteCountsType_pimpl: public virtual StripByteCountsType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_StripByteCountsType ();
  };

  class typeOfStripByteCountsType_pimpl: public virtual typeOfStripByteCountsType_pskel,
    public ::mix::StripByteCountsType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfStripByteCountsType ();
  };

  class TileWidthType_pimpl: public virtual TileWidthType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_TileWidthType ();
  };

  class typeOfTileWidthType_pimpl: public virtual typeOfTileWidthType_pskel,
    public ::mix::TileWidthType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfTileWidthType ();
  };

  class TileLengthType_pimpl: public virtual TileLengthType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_TileLengthType ();
  };

  class typeOfTileLengthType_pimpl: public virtual typeOfTileLengthType_pskel,
    public ::mix::TileLengthType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfTileLengthType ();
  };

  class TileOffsetsType_pimpl: public virtual TileOffsetsType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_TileOffsetsType ();
  };

  class typeOfTileOffsetsType_pimpl: public virtual typeOfTileOffsetsType_pskel,
    public ::mix::TileOffsetsType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfTileOffsetsType ();
  };

  class TileByteCountsType_pimpl: public virtual TileByteCountsType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_TileByteCountsType ();
  };

  class typeOfTileByteCountsType_pimpl: public virtual typeOfTileByteCountsType_pskel,
    public ::mix::TileByteCountsType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfTileByteCountsType ();
  };

  class PlanarConfigurationType_pimpl: public virtual PlanarConfigurationType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_PlanarConfigurationType ();
  };

  class typeOfPlanarConfigurationType_pimpl: public virtual typeOfPlanarConfigurationType_pskel,
    public ::mix::PlanarConfigurationType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfPlanarConfigurationType ();
  };

  class ImageIdentifierType_pimpl: public virtual ImageIdentifierType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ImageIdentifierType ();
  };

  class typeOfImageIdentifierType_pimpl: public virtual typeOfImageIdentifierType_pskel,
    public ::mix::ImageIdentifierType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    imageIdentifierLocation ();

    virtual void
    post_typeOfImageIdentifierType ();
  };

  class FileSizeType_pimpl: public virtual FileSizeType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_FileSizeType ();
  };

  class typeOfFileSizeType_pimpl: public virtual typeOfFileSizeType_pskel,
    public ::mix::FileSizeType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfFileSizeType ();
  };

  class ChecksumMethodType_pimpl: public virtual ChecksumMethodType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ChecksumMethodType ();
  };

  class typeOfChecksumMethodType_pimpl: public virtual typeOfChecksumMethodType_pskel,
    public ::mix::ChecksumMethodType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfChecksumMethodType ();
  };

  class ChecksumValueType_pimpl: public virtual ChecksumValueType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ChecksumValueType ();
  };

  class typeOfChecksumValueType_pimpl: public virtual typeOfChecksumValueType_pskel,
    public ::mix::ChecksumValueType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfChecksumValueType ();
  };

  class OrientationType_pimpl: public virtual OrientationType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_OrientationType ();
  };

  class typeOfOrientationType_pimpl: public virtual typeOfOrientationType_pskel,
    public ::mix::OrientationType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfOrientationType ();
  };

  class DisplayOrientationType_pimpl: public virtual DisplayOrientationType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_DisplayOrientationType ();
  };

  class typeOfDisplayOrientationType_pimpl: public virtual typeOfDisplayOrientationType_pskel,
    public ::mix::DisplayOrientationType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfDisplayOrientationType ();
  };

  class XTargetedDisplayARType_pimpl: public virtual XTargetedDisplayARType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_XTargetedDisplayARType ();
  };

  class typeOfXTargetedDisplayARType_pimpl: public virtual typeOfXTargetedDisplayARType_pskel,
    public ::mix::XTargetedDisplayARType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfXTargetedDisplayARType ();
  };

  class YTargetedDisplayARType_pimpl: public virtual YTargetedDisplayARType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_YTargetedDisplayARType ();
  };

  class typeOfYTargetedDisplayARType_pimpl: public virtual typeOfYTargetedDisplayARType_pskel,
    public ::mix::YTargetedDisplayARType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfYTargetedDisplayARType ();
  };

  class PreferredPresentationType_pimpl: public virtual PreferredPresentationType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_PreferredPresentationType ();
  };

  class typeOfPreferredPresentationType_pimpl: public virtual typeOfPreferredPresentationType_pskel,
    public ::mix::PreferredPresentationType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfPreferredPresentationType ();
  };

  class SourceTypeType_pimpl: public virtual SourceTypeType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SourceTypeType ();
  };

  class typeOfSourceTypeType_pimpl: public virtual typeOfSourceTypeType_pskel,
    public ::mix::SourceTypeType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfSourceTypeType ();
  };

  class SourceIDType_pimpl: public virtual SourceIDType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SourceIDType ();
  };

  class typeOfSourceIDType_pimpl: public virtual typeOfSourceIDType_pskel,
    public ::mix::SourceIDType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfSourceIDType ();
  };

  class ImageProducerType_pimpl: public virtual ImageProducerType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ImageProducerType ();
  };

  class typeOfImageProducerType_pimpl: public virtual typeOfImageProducerType_pskel,
    public ::mix::ImageProducerType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfImageProducerType ();
  };

  class SubjectDistanceType_pimpl: public virtual SubjectDistanceType_pskel,
    public ::xml_schema::float_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SubjectDistanceType ();
  };

  class typeOfSubjectDistanceType_pimpl: public virtual typeOfSubjectDistanceType_pskel,
    public ::mix::SubjectDistanceType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    min ();

    virtual void
    max ();

    virtual void
    post_typeOfSubjectDistanceType ();
  };

  class MeteringModeType_pimpl: public virtual MeteringModeType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_MeteringModeType ();
  };

  class typeOfMeteringModeType_pimpl: public virtual typeOfMeteringModeType_pskel,
    public ::mix::MeteringModeType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfMeteringModeType ();
  };

  class SceneIlluminantType_pimpl: public virtual SceneIlluminantType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SceneIlluminantType ();
  };

  class typeOfSceneIlluminantType_pimpl: public virtual typeOfSceneIlluminantType_pskel,
    public ::mix::SceneIlluminantType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfSceneIlluminantType ();
  };

  class FlashType_pimpl: public virtual FlashType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_FlashType ();
  };

  class typeOfFlashType_pimpl: public virtual typeOfFlashType_pskel,
    public ::mix::FlashType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfFlashType ();
  };

  class FlashReturnType_pimpl: public virtual FlashReturnType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_FlashReturnType ();
  };

  class typeOfFlashReturnType_pimpl: public virtual typeOfFlashReturnType_pskel,
    public ::mix::FlashReturnType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfFlashReturnType ();
  };

  class BackLightType_pimpl: public virtual BackLightType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_BackLightType ();
  };

  class typeOfBackLightType_pimpl: public virtual typeOfBackLightType_pskel,
    public ::mix::BackLightType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfBackLightType ();
  };

  class AutoFocusType_pimpl: public virtual AutoFocusType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_AutoFocusType ();
  };

  class typeOfAutoFocusType_pimpl: public virtual typeOfAutoFocusType_pskel,
    public ::mix::AutoFocusType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfAutoFocusType ();
  };

  class SensorType_pimpl: public virtual SensorType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SensorType ();
  };

  class typeOfSensorType_pimpl: public virtual typeOfSensorType_pskel,
    public ::mix::SensorType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfSensorType ();
  };

  class SamplingFrequencyPlaneType_pimpl: public virtual SamplingFrequencyPlaneType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SamplingFrequencyPlaneType ();
  };

  class typeOfSamplingFrequencyPlaneType_pimpl: public virtual typeOfSamplingFrequencyPlaneType_pskel,
    public ::mix::SamplingFrequencyPlaneType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfSamplingFrequencyPlaneType ();
  };

  class SamplingFrequencyUnitType_pimpl: public virtual SamplingFrequencyUnitType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SamplingFrequencyUnitType ();
  };

  class typeOfSamplingFrequencyUnitType_pimpl: public virtual typeOfSamplingFrequencyUnitType_pskel,
    public ::mix::SamplingFrequencyUnitType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfSamplingFrequencyUnitType ();
  };

  class BitsPerSampleType_pimpl: public virtual BitsPerSampleType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_BitsPerSampleType ();
  };

  class typeOfBitsPerSampleType_pimpl: public virtual typeOfBitsPerSampleType_pskel,
    public ::mix::BitsPerSampleType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfBitsPerSampleType ();
  };

  class SamplesPerPixelType_pimpl: public virtual SamplesPerPixelType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_SamplesPerPixelType ();
  };

  class typeOfSamplesPerPixelType_pimpl: public virtual typeOfSamplesPerPixelType_pskel,
    public ::mix::SamplesPerPixelType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfSamplesPerPixelType ();
  };

  class ExtraSamplesType_pimpl: public virtual ExtraSamplesType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ExtraSamplesType ();
  };

  class typeOfExtraSamplesType_pimpl: public virtual typeOfExtraSamplesType_pskel,
    public ::mix::ExtraSamplesType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfExtraSamplesType ();
  };

  class ColormapType_pimpl: public virtual ColormapType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ColormapType ();
  };

  class typeOfColormapType_pimpl: public virtual typeOfColormapType_pskel,
    public ::mix::ColormapType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfColormapType ();
  };

  class GrayResponseCurveType_pimpl: public virtual GrayResponseCurveType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_GrayResponseCurveType ();
  };

  class typeOfGrayResponseCurveType_pimpl: public virtual typeOfGrayResponseCurveType_pskel,
    public ::mix::GrayResponseCurveType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfGrayResponseCurveType ();
  };

  class GrayResponseUnitType_pimpl: public virtual GrayResponseUnitType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_GrayResponseUnitType ();
  };

  class typeOfGrayResponseUnitType_pimpl: public virtual typeOfGrayResponseUnitType_pskel,
    public ::mix::GrayResponseUnitType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfGrayResponseUnitType ();
  };

  class CIExyType_pimpl: public virtual CIExyType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_CIExyType ();
  };

  class typeOfCIExyType_pimpl: public virtual typeOfCIExyType_pskel,
    public ::mix::CIExyType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfCIExyType ();
  };

  class TargetTypeType_pimpl: public virtual TargetTypeType_pskel,
    public ::xml_schema::integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_TargetTypeType ();
  };

  class typeOfTargetTypeType_pimpl: public virtual typeOfTargetTypeType_pskel,
    public ::mix::TargetTypeType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfTargetTypeType ();
  };

  class typeOfPreviousImageMetadataType_pimpl: public virtual typeOfPreviousImageMetadataType_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    post_typeOfPreviousImageMetadataType ();
  };

  class StringType_pimpl: public virtual StringType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_StringType ();
  };

  class typeOfStringType_pimpl: public virtual typeOfStringType_pskel,
    public ::mix::StringType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfStringType ();
  };

  class NonNegativeRealType_pimpl: public virtual NonNegativeRealType_pskel,
    public ::xml_schema::float_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_NonNegativeRealType ();
  };

  class typeOfNonNegativeRealType_pimpl: public virtual typeOfNonNegativeRealType_pskel,
    public ::mix::NonNegativeRealType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfNonNegativeRealType ();
  };

  class PositiveIntegerType_pimpl: public virtual PositiveIntegerType_pskel,
    public ::xml_schema::positive_integer_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_PositiveIntegerType ();
  };

  class typeOfPositiveIntegerType_pimpl: public virtual typeOfPositiveIntegerType_pskel,
    public ::mix::PositiveIntegerType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfPositiveIntegerType ();
  };

  class DateTimeType_pimpl: public virtual DateTimeType_pskel,
    public ::xml_schema::date_time_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_DateTimeType ();
  };

  class typeOfDateTimeType_pimpl: public virtual typeOfDateTimeType_pskel,
    public ::mix::DateTimeType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfDateTimeType ();
  };

  class ReferenceType_pimpl: public virtual ReferenceType_pskel,
    public ::xml_schema::uri_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_ReferenceType ();
  };

  class typeOfReferenceType_pimpl: public virtual typeOfReferenceType_pskel,
    public ::mix::ReferenceType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    use ();

    virtual void
    post_typeOfReferenceType ();
  };

  class mix_pimpl: public virtual mix_pskel,
    public ::mix::mixType_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    post_mix ();
  };

  class Format_pimpl: public virtual Format_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    MIMEType ();

    virtual void
    ByteOrder ();

    virtual void
    Compression ();

    virtual void
    PhotometricInterpretation ();

    virtual void
    Segments ();

    virtual void
    PlanarConfiguration ();

    virtual void
    post_Format ();
  };

  class File_pimpl: public virtual File_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ImageIdentifier ();

    virtual void
    FileSize ();

    virtual void
    Checksum ();

    virtual void
    Orientation ();

    virtual void
    DisplayOrientation ();

    virtual void
    TargetedDisplayAR ();

    virtual void
    post_File ();
  };

  class Host_pimpl: public virtual Host_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    HostComputer ();

    virtual void
    OperatingSystem ();

    virtual void
    OSVersion ();

    virtual void
    post_Host ();
  };

  class ScanningSystemCapture_pimpl: public virtual ScanningSystemCapture_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ScanningSystemHardware ();

    virtual void
    ScanningSystemSoftware ();

    virtual void
    ScannerCaptureSettings ();

    virtual void
    post_ScanningSystemCapture ();
  };

  class DigitalCameraCapture_pimpl: public virtual DigitalCameraCapture_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    DigitalCameraManufacturer ();

    virtual void
    DigitalCameraModel ();

    virtual void
    post_DigitalCameraCapture ();
  };

  class CameraCaptureSettings_pimpl: public virtual CameraCaptureSettings_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    FNumber ();

    virtual void
    ExposureTime ();

    virtual void
    Brightness ();

    virtual void
    ExposureBias ();

    virtual void
    SubjectDistance ();

    virtual void
    MeteringMode ();

    virtual void
    SceneIlluminant ();

    virtual void
    ColorTemp ();

    virtual void
    FocalLength ();

    virtual void
    Flash ();

    virtual void
    FlashEnergy ();

    virtual void
    FlashReturn ();

    virtual void
    BackLight ();

    virtual void
    ExposureIndex ();

    virtual void
    AutoFocus ();

    virtual void
    PrintAspectRatio ();

    virtual void
    post_CameraCaptureSettings ();
  };

  class SpatialMetrics_pimpl: public virtual SpatialMetrics_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    SamplingFrequencyPlane ();

    virtual void
    SamplingFrequencyUnit ();

    virtual void
    XSamplingFrequency ();

    virtual void
    YSamplingFrequency ();

    virtual void
    ImageWidth ();

    virtual void
    ImageLength ();

    virtual void
    Source_X ();

    virtual void
    Source_Y ();

    virtual void
    post_SpatialMetrics ();
  };

  class Energetics_pimpl: public virtual Energetics_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    BitsPerSample ();

    virtual void
    SamplesPerPixel ();

    virtual void
    ExtraSamples ();

    virtual void
    Colormap ();

    virtual void
    GrayResponse ();

    virtual void
    WhitePoint ();

    virtual void
    PrimaryChromaticities ();

    virtual void
    post_Energetics ();
  };

  class TargetData_pimpl: public virtual TargetData_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    TargetType ();

    virtual void
    TargetID ();

    virtual void
    ImageData ();

    virtual void
    PerformanceData ();

    virtual void
    Profiles ();

    virtual void
    post_TargetData ();
  };

  class ImageProcessing_pimpl: public virtual ImageProcessing_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    DateTimeProcessed ();

    virtual void
    SourceData ();

    virtual void
    ProcessingAgency ();

    virtual void
    ProcessingSoftware ();

    virtual void
    ProcessingActions ();

    virtual void
    post_ImageProcessing ();
  };

  class Compression_pimpl: public virtual Compression_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    CompressionScheme ();

    virtual void
    CompressionLevel ();

    virtual void
    post_Compression ();
  };

  class PhotometricInterpretation_pimpl: public virtual PhotometricInterpretation_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ColorSpace ();

    virtual void
    ICCProfile ();

    virtual void
    YCbCrSubSampling ();

    virtual void
    YCbCrPositioning ();

    virtual void
    YcbCrCoefficients ();

    virtual void
    ReferenceBlackWhite ();

    virtual void
    post_PhotometricInterpretation ();
  };

  class Segments_pimpl: public virtual Segments_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    SegmentType ();

    virtual void
    StripOffsets ();

    virtual void
    RowsPerStrip ();

    virtual void
    StripByteCounts ();

    virtual void
    TileWidth ();

    virtual void
    TileLength ();

    virtual void
    TileOffsets ();

    virtual void
    TileByteCounts ();

    virtual void
    post_Segments ();
  };

  class Checksum_pimpl: public virtual Checksum_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ChecksumMethod ();

    virtual void
    ChecksumValue ();

    virtual void
    post_Checksum ();
  };

  class TargetedDisplayAR_pimpl: public virtual TargetedDisplayAR_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    XTargetedDisplayAR ();

    virtual void
    YTargetedDisplayAR ();

    virtual void
    post_TargetedDisplayAR ();
  };

  class ScanningSystemHardware_pimpl: public virtual ScanningSystemHardware_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ScannerManufacturer ();

    virtual void
    ScannerModel ();

    virtual void
    post_ScanningSystemHardware ();
  };

  class ScanningSystemSoftware_pimpl: public virtual ScanningSystemSoftware_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ScanningSoftware ();

    virtual void
    ScanningSoftwareVersionNo ();

    virtual void
    post_ScanningSystemSoftware ();
  };

  class ScannerCaptureSettings_pimpl: public virtual ScannerCaptureSettings_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    PixelSize ();

    virtual void
    PhysScanResolution ();

    virtual void
    post_ScannerCaptureSettings ();
  };

  class PrintAspectRatio_pimpl: public virtual PrintAspectRatio_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    XPrintAspectRatio ();

    virtual void
    YPrintAspectRatio ();

    virtual void
    post_PrintAspectRatio ();
  };

  class Source_X_pimpl: public virtual Source_X_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    Source_Xdimension ();

    virtual void
    Source_XdimensionUnit ();

    virtual void
    post_Source_X ();
  };

  class Source_Y_pimpl: public virtual Source_Y_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    Source_Ydimension ();

    virtual void
    Source_YdimensionUnit ();

    virtual void
    post_Source_Y ();
  };

  class Colormap_pimpl: public virtual Colormap_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    Colormap_BitCodeValue ();

    virtual void
    Colormap_RedValue ();

    virtual void
    Colormap_GreenValue ();

    virtual void
    Colormap_BlueValue ();

    virtual void
    post_Colormap ();
  };

  class GrayResponse_pimpl: public virtual GrayResponse_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    GrayResponseCurve ();

    virtual void
    GrayResponseUnit ();

    virtual void
    post_GrayResponse ();
  };

  class WhitePoint_pimpl: public virtual WhitePoint_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    WhitePoint_Xvalue ();

    virtual void
    WhitePoint_Yvalue ();

    virtual void
    post_WhitePoint ();
  };

  class PrimaryChromaticities_pimpl: public virtual PrimaryChromaticities_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    PrimaryChromaticities_RedX ();

    virtual void
    PrimaryChromaticities_RedY ();

    virtual void
    PrimaryChromaticities_GreenX ();

    virtual void
    PrimaryChromaticities_GreenY ();

    virtual void
    PrimaryChromaticities_BlueX ();

    virtual void
    PrimaryChromaticities_BlueY ();

    virtual void
    post_PrimaryChromaticities ();
  };

  class TargetID_pimpl: public virtual TargetID_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    TargetIDManufacturer ();

    virtual void
    TargetIDName ();

    virtual void
    TargetIDNo ();

    virtual void
    TargetIDMedia ();

    virtual void
    post_TargetID ();
  };

  class ProcessingSoftware_pimpl: public virtual ProcessingSoftware_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ProcessingSoftwareName ();

    virtual void
    ProcessingSoftwareVersion ();

    virtual void
    post_ProcessingSoftware ();
  };

  class ICCProfile_pimpl: public virtual ICCProfile_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ProfileName ();

    virtual void
    ProfileURL ();

    virtual void
    post_ICCProfile ();
  };

  class ScannerModel_pimpl: public virtual ScannerModel_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ScannerModelName ();

    virtual void
    ScannerModelNumber ();

    virtual void
    ScannerModelSerialNo ();

    virtual void
    post_ScannerModel ();
  };

  class PhysScanResolution_pimpl: public virtual PhysScanResolution_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    XphysScanResolution ();

    virtual void
    YphysScanResolution ();

    virtual void
    post_PhysScanResolution ();
  };
}

#endif // CXX_________DATA_SCHEMAS_MIX_PIMPL_HXX
